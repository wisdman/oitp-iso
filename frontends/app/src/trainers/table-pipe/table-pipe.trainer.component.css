:host {
  --gap: 6px;
  --columns: 10;
}

@media (max-width: 650px) {
  :host {
    --columns: 6;
  }
}

@media (max-width: 350px) {
  :host {
    --columns: 5;
  }
}

/* Rules area */

.rules {
  display: grid;
  grid-template-columns: max-content max-content;
  gap: 8px;
  column-gap: 16px;

  margin-top: calc(var(--trainer-margin) * 2);
}

.rule {
  display: flex;
  justify-content: flex-start;
  align-items: center;
}

.rule .item {
  width: 32px;
  height: 32px;
}

.rule span {
  margin-top: -2px;
  font-size: 16px;
}

/* Matrix */

.matrix {
  width: 100%;
  max-width: calc(var(--trainer-svg-height) * var(--columns) + var(--gap) * (var(--columns) - 1) );

  display: grid;
  grid-template-columns: repeat(auto-fit, var(--trainer-svg-height));
  grid-template-rows: min-content repeat(auto-fit, var(--trainer-svg-height));
  justify-content: center;
  align-content: center;

  gap: var(--gap);

  margin: auto;
  margin-top: calc(var(--trainer-margin) * 2);
}


/* Items */

.item {
  display: block;
  width: var(--trainer-svg-height);
  height: var(--trainer-svg-height);
}

.item--success,
.item--error {
  opacity: .7;
}

.path {
  stroke: var(--trainer-border-color);
  stroke-width: 1;
  fill: none;
}

.item--current .path {
  stroke: var(--trainer-selected-color);
  stroke-width: 2;
}

.fill-path {
  stroke: none;
  stroke-width: 0;
  fill: var(--trainer-background-color);
}

.text {
  font-family: inherit;
  font-size: 22px;
  font-weight: 600;
  line-height: 1;

  color: var(--trainer-text-color);
  fill: currentColor;

  transform: rotateY(0);
  transform-origin: center;
  opacity: 1;

  transition: transform .15s linear, opacity 0s linear .15s;
}

.item--success .text,
.item--error .text {
  transform: rotateY(-90deg);
  opacity: 0;
}

.item--current .text {
  color: var(--trainer-selected-color);
}

.success {
  fill: var(--trainer-success-color);
}

.error {
  fill: var(--trainer-error-color);
}

.success,
.error {
  transform: rotateY(90deg);
  transform-origin: center;
  opacity: 0;

  transition: transform .15s linear .15s;
}

.item--success .success,
.item--error .error {
  transform: rotateY(0deg);
  opacity: 1;
}
